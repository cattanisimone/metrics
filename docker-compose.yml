version: "2.3"

volumes:
  grafana-data:
  prometheus-data:
  elasticsearch-data:

services:

  # Solution 1
  logstash:
    image: docker.elastic.co/logstash/logstash-oss:6.3.0
    networks:
      - front
    volumes:
      - ./logstash/config/logstash.yml:/usr/share/logstash/config/logstash.yml
      - ./logstash/pipeline:/usr/share/logstash/pipeline
      - ./logstash/templates:/usr/share/logstash/templates
    ports:
      - 5000:5000
    environment:
      LS_JAVA_OPTS: "-Xmx1g -Xms1g"
    command: "--config.reload.automatic"

  metricbeat-1:
    image: docker.elastic.co/beats/metricbeat:6.3.0
    user: root
    networks:
      - front
    volumes:
      - ./metricbeat-1/metricbeat.yml:/usr/share/metricbeat/metricbeat.yml
      - /var/run/docker.sock:/var/run/docker.sock
      - /var/lib/docker/containers/:/var/lib/docker/containers/
    command: "-e -strict.perms=false"

  # Solution 2
  metricbeat-2:
    image: docker.elastic.co/beats/metricbeat:6.3.0
    user: root
    networks:
      - front
    volumes:
      - ./metricbeat-2/metricbeat.yml:/usr/share/metricbeat/metricbeat.yml
      - /var/run/docker.sock:/var/run/docker.sock
      - /var/lib/docker/containers/:/var/lib/docker/containers/
    command: "-e -strict.perms=false"

  # Solution 3
  prometheus:
    image: prom/prometheus:v2.3.0
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus-data:/prometheus
    command:
      - --config.file=/etc/prometheus/prometheus.yml
      - --storage.tsdb.path=./prometheus
      - --storage.tsdb.retention=365d
      - --web.enable-lifecycle
    ports:
      - 9090:9090
    networks:
      - front

  # Tools
  kibana:
    image: docker.elastic.co/kibana/kibana-oss:6.3.0
    environment:
      ELASTICSEARCH_URL: "http://elasticsearch:9200"
      STATUS_ALLOW_ANONYMOUS: 'true'
    ports:
      - 5601:5601
    volumes:
      - ./kibana/kibana.yml:/usr/share/kibana/config/kibana.yml
    networks:
      - front

  grafana:
    image: grafana/grafana:5.1.3
    depends_on:
      - prometheus
    environment:
      GF_SECURITY_ADMIN_USER: admin
      GF_SECURITY_ADMIN_PASSWORD: admin
      GF_USERS_ALLOW_SIGN_UP: "false"
      GF_INSTALL_PLUGINS: grafana-clock-panel,grafana-piechart-panel
    volumes:
      - grafana-data:/var/lib/grafana
      - ./grafana/provisioning/datasources:/etc/grafana/provisioning/datasources
      - ./grafana/provisioning/dashboards:/etc/grafana/provisioning/dashboards
      - ./grafana/dashboards:/var/lib/grafana/dashboards
    ports:
      - 3000:3000
    networks:
      - front

  # Storage
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch-oss:6.3.0
    environment:
      - cluster.name=docker-cluster
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    mem_limit: 4g
    ports:
      - 9300:9300
      - 9200:9200
    volumes:
      - ./elasticsearch/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml
      - elasticsearch-data:/usr/share/elasticsearch/data
    networks:
      - front

  node-exporter:
    image: prom/node-exporter
    labels:
      prometheus_scrape: "true"
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command: 
      - '--path.procfs=/host/proc' 
      - '--path.sysfs=/host/sys'
      - --collector.filesystem.ignored-mount-points
      - "^/(sys|proc|dev|host|etc|rootfs/var/lib/docker/containers|rootfs/var/lib/docker/overlay2|rootfs/run/docker/netns|rootfs/var/lib/docker/aufs)($$|/)"
    ports:
      - 9100:9100
    networks:
      - front

networks:
  front:
    driver: bridge